/* CSS for SubHeader  */

.SubHeader {
    display: grid;
    grid-template-areas: "left middle right" "bottom bottom bottom";
    grid-template-columns: auto 1fr auto;
    align-items: center;
    margin-bottom: 16px;
}

.SubHeader--expandedSearch {
    grid-template-areas: "left left left" "bottom bottom bottom";
}

.SubHeader-rightPane {
    grid-area: right;
    display: flex;
    align-items: center;
    column-gap: 12px;
}

.SubHeader-middlePane {
    grid-area: middle;
    text-align: center;
}

.SubHeader-bottomPane {
    grid-area: bottom;
}

.SubHeader-leftPane {
    grid-area: left;
    display: flex;
    align-items: center;
    width: 100%;
    gap: 12px;

    /* Since the container is not full width (due to the grid around it)
     we want it to grow, and then be limited by the max-width of the "FormControl-input-width--xy" class */
    & [class*='FormControl-input-width--'] {
        &:not(.FormControl-input-width--auto) {
            width: 100vw;
        }
    }
}

.SubHeader-filterContainer {
    display: flex;
    width: 100%;
    gap: 8px;
}

.SubHeader-filterInput_hiddenClearButton + button.FormControl-input-trailingAction {
  display: none;
}

@media (max-width: 543.98px) {
    .SubHeader {
        grid-template-areas: "left right" "middle middle" "bottom bottom";
        grid-template-columns: 1fr auto;
        grid-row-gap: var(--stack-gap-condensed);
    }

    .SubHeader--emptyLeftPane {
        grid-template-areas: "middle middle right" "bottom bottom bottom";
        grid-template-columns: auto 1fr auto;
    }

    .SubHeader-middlePane {
        text-align: left;
    }
}
